{
	"name": "df_brnz_prps_prop_sales_dtl",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ADLSDataSet_rehouzed",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "bronze_prps_prop_sales_dtl_DS",
						"type": "DatasetReference"
					},
					"name": "sourceTbl"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "bronze_prps_prop_sales_INTM_DS",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select2"
				},
				{
					"name": "join1"
				},
				{
					"name": "filter1"
				},
				{
					"name": "select3"
				},
				{
					"name": "filterPropLstDtNN"
				},
				{
					"name": "derivedColumnTbl"
				},
				{
					"name": "selectSourceTbls"
				}
			],
			"scriptLines": [
				"parameters{",
				"     etl_nr as integer,",
				"     brnz_prps_prop_sales_dtl_sk as integer,",
				"     file_name as string",
				"}",
				"source(output(",
				"          Address as string,",
				"          {Unit #} as string,",
				"          City as string,",
				"          State as string,",
				"          Zip as integer,",
				"          County as string,",
				"          APN as string,",
				"          {Owner Occupied} as boolean,",
				"          {Owner 1 First Name} as string,",
				"          {Owner 1 Last Name} as string,",
				"          {Owner 2 First Name} as string,",
				"          {Owner 2 Last Name} as string,",
				"          {Mailing Care of Name} as string,",
				"          {Mailing Address} as string,",
				"          {Mailing Unit #} as string,",
				"          {Mailing City} as string,",
				"          {Mailing State} as string,",
				"          {Mailing Zip} as string,",
				"          {Mailing County} as string,",
				"          {Do Not Mail} as boolean,",
				"          {Property Class} as string,",
				"          {Property Type} as string,",
				"          Bedrooms as short,",
				"          {Total Bathrooms} as double,",
				"          {Building Sqft} as short,",
				"          {Lot Size Sqft} as integer,",
				"          {Year Built} as short,",
				"          {Effective Year Built} as short,",
				"          {Pool Type} as string,",
				"          Vacant as boolean,",
				"          {HOA Present} as boolean,",
				"          {Total Assessed Value} as integer,",
				"          {Last Sale Date} as date 'dd/MM/yyyy',",
				"          {Last Sale Recording Date} as date,",
				"          {Last Sale Amount} as integer,",
				"          {Last Cash Buyer} as boolean,",
				"          {Last Sale Buyer Name 1} as string,",
				"          {Last Sale Buyer Name 2} as string,",
				"          {Prior Sale Date} as date,",
				"          {Prior Sale Recordng Date} as date,",
				"          {Prior Sale Amount} as integer,",
				"          {Prior Sale Cash Buyer} as boolean,",
				"          {Prior Sale Buyer Name 1} as string,",
				"          {Prior Sale Buyer Name 2} as string,",
				"          {Loan 1 Date} as date,",
				"          {Loan 1 Balance} as integer,",
				"          {Loan 1 Type} as string,",
				"          {Loan 1 Lender} as string,",
				"          {Loan 1 Rate} as double,",
				"          {Loan 1 Rate Type} as string,",
				"          {Loan 2 Date} as date,",
				"          {Loan 2 Balance} as integer,",
				"          {Loan 2 Type} as string,",
				"          {Loan 2 Lender} as string,",
				"          {Loan 2 Rate} as double,",
				"          {Loan 2 Rate Type} as string,",
				"          {Total Open Loans} as short,",
				"          {Est. Remaining balance of Open Loans} as integer,",
				"          {Est. Value} as integer,",
				"          {Est. Loan-to-Value} as double,",
				"          {Est. Equity} as integer,",
				"          {Monthly Rent} as double,",
				"          {Gross Yield %} as double,",
				"          {Est. Total Monthly Payments} as double,",
				"          {Total Condition} as string,",
				"          {Interior Condition} as string,",
				"          {Exterior Condition} as string,",
				"          {Bathroom Condition} as string,",
				"          {Kitchen Condition} as string,",
				"          {Foreclosure Factor} as string,",
				"          {MLS Status} as string,",
				"          {MLS Date} as string,",
				"          {MLS Amount} as integer,",
				"          {MLS Agent Name} as string,",
				"          {MLS Agent Phone} as string,",
				"          {MLS Agent E-Mail} as string,",
				"          {MLS Brokerage Name} as string,",
				"          {MLS Brokerage Phone} as string,",
				"          {Lien Amount} as string,",
				"          {Marketing Lists} as short,",
				"          {Date Added to List} as string,",
				"          {Method of Add} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          brnz_prps_prop_sales_dtl_sk as long,",
				"          load_date_dt as date,",
				"          etl_nr as long,",
				"          etl_recorded_gmts as timestamp,",
				"          record_inserted_ts as timestamp,",
				"          investor_company_nm_txt as string,",
				"          prop_last_sale_dt as date,",
				"          prop_last_sale_amt as double,",
				"          prop_attr_br_cnt as integer,",
				"          prop_attr_bth_cnt as integer,",
				"          prop_attr_sqft_nr as integer,",
				"          prop_yr_blt_nr as integer,",
				"          prop_address_line_txt as string,",
				"          prop_city_nm as string,",
				"          prop_state_nm as string,",
				"          prop_cnty_nm as string,",
				"          prop_zip_cd as string,",
				"          prop_tlt_cnd_nm as string,",
				"          prop_int_cnd_nm as string,",
				"          prop_ext_cnd_nm as string,",
				"          prop_bth_cnd_nm as string,",
				"          prop_kth_cnd_nm as string,",
				"          prop_list_price_amt as double,",
				"          active_rec_ind as boolean,",
				"          mailing_address as string,",
				"          mailing_unit as string,",
				"          mailing_city as string,",
				"          mailing_zip as string,",
				"          mailing_state as string,",
				"          prop_lndr_nm as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT * FROM bronze.brnz_prps_prop_sales_dtl',",
				"     format: 'query') ~> sourceTbl",
				"source1 select(mapColumn(",
				"          INVESTOR_COMPANY_NM_TXT = {Owner 1 Last Name},",
				"          PROP_LAST_SALE_DT = {Last Sale Date},",
				"          PROP_LAST_SALE_AMT = {Last Sale Amount},",
				"          PROP_ATTR_BR_CNT = Bedrooms,",
				"          PROP_ATTR_BTH_CNT = {Total Bathrooms},",
				"          PROP_ATTR_SQFT_NR = {Building Sqft},",
				"          PROP_YR_BLT_NR = {Year Built},",
				"          PROP_ADDRESS_LINE_TXT = Address,",
				"          PROP_CITY_NM = City,",
				"          PROP_STATE_NM = State,",
				"          PROP_CNTY_NM = County,",
				"          PROP_ZIP_CD = Zip,",
				"          PROP_TLT_CND_NM = {Total Condition},",
				"          PROP_INT_CND_NM = {Interior Condition},",
				"          PROP_EXT_CND_NM = {Exterior Condition},",
				"          PROP_BTH_CND_NM = {Bathroom Condition},",
				"          PROP_KTH_CND_NM = {Kitchen Condition},",
				"          PROP_LIST_PRICE_AMT = {MLS Amount},",
				"          {Mailing Address},",
				"          {Mailing Unit} = {Mailing Unit #},",
				"          {Mailing City},",
				"          {Mailing State},",
				"          {Mailing Zip},",
				"          {Loan 1 Lender}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 keyGenerate(output(sk_num as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"surrogateKey1 derive(brnz_prps_prop_sales_dtl_sk = add($brnz_prps_prop_sales_dtl_sk,sk_num),",
				"          etl_nr = add($etl_nr, 1),",
				"          LOAD_DATE_DT = currentDate(),",
				"          ETL_RECORDED_GMTS = currentTimestamp(),",
				"          RECORD_INSERTED_TS = currentTimestamp(),",
				"          PROP_LAST_SALE_DT = toDate(toString(PROP_LAST_SALE_DT),'yyyy-MM-dd'),",
				"          derived_addr = concat(\r",
				"  coalesce(toString(PROP_ADDRESS_LINE_TXT), ''),\r",
				"  ', ',\r",
				"  coalesce(toString(PROP_CITY_NM), ''),\r",
				"  ', ',\r",
				"  coalesce(toString(PROP_STATE_NM), ''),\r",
				"  ', ',\r",
				"  coalesce(toString(PROP_CNTY_NM), ''),\r",
				"  ', ',\r",
				"  coalesce(toString(PROP_ZIP_CD), '')\r",
				"),",
				"          local1 := currentTimestamp()) ~> derivedColumn1",
				"derivedColumn1 select(mapColumn(",
				"          brnz_prps_prop_sales_dtl_sk,",
				"          load_date_dt = LOAD_DATE_DT,",
				"          etl_nr,",
				"          etl_recorded_gmts = ETL_RECORDED_GMTS,",
				"          record_inserted_ts = RECORD_INSERTED_TS,",
				"          investor_company_nm_txt = INVESTOR_COMPANY_NM_TXT,",
				"          prop_last_sale_dt = PROP_LAST_SALE_DT,",
				"          prop_last_sale_amt = PROP_LAST_SALE_AMT,",
				"          prop_attr_br_cnt = PROP_ATTR_BR_CNT,",
				"          prop_attr_bth_cnt = PROP_ATTR_BTH_CNT,",
				"          prop_attr_sqft_nr = PROP_ATTR_SQFT_NR,",
				"          prop_yr_blt_nr = PROP_YR_BLT_NR,",
				"          prop_address_line_txt = PROP_ADDRESS_LINE_TXT,",
				"          prop_city_nm = PROP_CITY_NM,",
				"          prop_state_nm = PROP_STATE_NM,",
				"          prop_cnty_nm = PROP_CNTY_NM,",
				"          prop_zip_cd = PROP_ZIP_CD,",
				"          prop_tlt_cnd_nm = PROP_TLT_CND_NM,",
				"          prop_int_cnd_nm = PROP_INT_CND_NM,",
				"          prop_ext_cnd_nm = PROP_EXT_CND_NM,",
				"          prop_bth_cnd_nm = PROP_BTH_CND_NM,",
				"          prop_kth_cnd_nm = PROP_KTH_CND_NM,",
				"          prop_list_price_amt = PROP_LIST_PRICE_AMT,",
				"          mailing_address = {Mailing Address},",
				"          mailing_unit = {Mailing Unit},",
				"          mailing_city = {Mailing City},",
				"          mailing_state = {Mailing State},",
				"          mailing_zip = {Mailing Zip},",
				"          prop_lndr_nm = {Loan 1 Lender},",
				"          derived_addr",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"filterPropLstDtNN, selectSourceTbls join(select2@investor_company_nm_txt == selectSourceTbls@investor_company_nm_txt",
				"     && select2@derived_addr == selectSourceTbls@derived_addr",
				"     && select2@prop_last_sale_dt == selectSourceTbls@prop_last_sale_dt,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 filter(isNull(selectSourceTbls@investor_company_nm_txt)) ~> filter1",
				"filter1 select(mapColumn(",
				"          brnz_prps_prop_sales_dtl_sk = select2@brnz_prps_prop_sales_dtl_sk,",
				"          load_date_dt = select2@load_date_dt,",
				"          etl_nr = select2@etl_nr,",
				"          etl_recorded_gmts = select2@etl_recorded_gmts,",
				"          record_inserted_ts = select2@record_inserted_ts,",
				"          investor_company_nm_txt = select2@investor_company_nm_txt,",
				"          prop_last_sale_dt = select2@prop_last_sale_dt,",
				"          prop_last_sale_amt = select2@prop_last_sale_amt,",
				"          prop_attr_br_cnt = select2@prop_attr_br_cnt,",
				"          prop_attr_bth_cnt = select2@prop_attr_bth_cnt,",
				"          prop_attr_sqft_nr = select2@prop_attr_sqft_nr,",
				"          prop_yr_blt_nr = select2@prop_yr_blt_nr,",
				"          prop_address_line_txt = select2@prop_address_line_txt,",
				"          prop_city_nm = select2@prop_city_nm,",
				"          prop_state_nm = select2@prop_state_nm,",
				"          prop_cnty_nm = select2@prop_cnty_nm,",
				"          prop_zip_cd = select2@prop_zip_cd,",
				"          prop_tlt_cnd_nm = select2@prop_tlt_cnd_nm,",
				"          prop_int_cnd_nm = select2@prop_int_cnd_nm,",
				"          prop_ext_cnd_nm = select2@prop_ext_cnd_nm,",
				"          prop_bth_cnd_nm = select2@prop_bth_cnd_nm,",
				"          prop_kth_cnd_nm = select2@prop_kth_cnd_nm,",
				"          prop_list_price_amt = select2@prop_list_price_amt,",
				"          mailing_address = select2@mailing_address,",
				"          mailing_unit = select2@mailing_unit,",
				"          mailing_city = select2@mailing_city,",
				"          mailing_state = select2@mailing_state,",
				"          mailing_zip = select2@mailing_zip,",
				"          prop_lndr_nm = select2@prop_lndr_nm,",
				"          brnz_prps_prop_sales_dtl_sk = select2@brnz_prps_prop_sales_dtl_sk,",
				"          load_date_dt = select2@load_date_dt,",
				"          etl_nr = select2@etl_nr,",
				"          etl_recorded_gmts = select2@etl_recorded_gmts,",
				"          record_inserted_ts = select2@etl_recorded_gmts,",
				"          investor_company_nm_txt = select2@investor_company_nm_txt,",
				"          prop_last_sale_dt = select2@prop_last_sale_dt,",
				"          prop_last_sale_amt = select2@prop_last_sale_amt,",
				"          prop_attr_br_cnt = select2@prop_attr_br_cnt,",
				"          prop_attr_bth_cnt = select2@prop_attr_bth_cnt,",
				"          prop_attr_sqft_nr = select2@prop_attr_sqft_nr,",
				"          prop_yr_blt_nr = select2@prop_yr_blt_nr,",
				"          prop_address_line_txt = select2@prop_address_line_txt,",
				"          prop_city_nm = select2@prop_city_nm,",
				"          prop_state_nm = select2@prop_state_nm,",
				"          prop_cnty_nm = select2@prop_cnty_nm,",
				"          prop_zip_cd = select2@prop_zip_cd,",
				"          prop_tlt_cnd_nm = select2@prop_tlt_cnd_nm,",
				"          prop_int_cnd_nm = select2@prop_int_cnd_nm,",
				"          prop_ext_cnd_nm = select2@prop_ext_cnd_nm,",
				"          prop_bth_cnd_nm = select2@prop_bth_cnd_nm,",
				"          prop_kth_cnd_nm = select2@prop_kth_cnd_nm,",
				"          prop_list_price_amt = select2@prop_list_price_amt,",
				"          active_rec_ind,",
				"          mailing_address = select2@mailing_address,",
				"          mailing_unit = select2@mailing_unit,",
				"          mailing_city = select2@mailing_city,",
				"          mailing_zip = select2@mailing_zip,",
				"          mailing_state = select2@mailing_state,",
				"          prop_lndr_nm = select2@prop_lndr_nm",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"select2 filter(!isNull(prop_last_sale_dt)) ~> filterPropLstDtNN",
				"sourceTbl derive(derived_addr = concat(  coalesce(toString(prop_address_line_txt), ''),  ', ',  coalesce(toString(prop_city_nm), ''),  ', ',  coalesce(toString(prop_state_nm), ''),  ', ',  coalesce(toString(prop_cnty_nm), ''),  ', ',  coalesce(toString(prop_zip_cd), ''))) ~> derivedColumnTbl",
				"derivedColumnTbl select(mapColumn(",
				"          brnz_prps_prop_sales_dtl_sk,",
				"          load_date_dt,",
				"          etl_nr,",
				"          etl_recorded_gmts,",
				"          record_inserted_ts,",
				"          investor_company_nm_txt,",
				"          prop_last_sale_dt,",
				"          prop_last_sale_amt,",
				"          prop_attr_br_cnt,",
				"          prop_attr_bth_cnt,",
				"          prop_attr_sqft_nr,",
				"          prop_yr_blt_nr,",
				"          prop_address_line_txt,",
				"          prop_city_nm,",
				"          prop_state_nm,",
				"          prop_cnty_nm,",
				"          prop_zip_cd,",
				"          prop_tlt_cnd_nm,",
				"          prop_int_cnd_nm,",
				"          prop_ext_cnd_nm,",
				"          prop_bth_cnd_nm,",
				"          prop_kth_cnd_nm,",
				"          prop_list_price_amt,",
				"          active_rec_ind,",
				"          mailing_address,",
				"          mailing_unit,",
				"          mailing_city,",
				"          mailing_zip,",
				"          mailing_state,",
				"          prop_lndr_nm,",
				"          derived_addr",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectSourceTbls",
				"select3 sink(allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     input(",
				"          brnz_prps_prop_sales_dtl_sk as long,",
				"          load_date_dt as date,",
				"          etl_nr as integer,",
				"          etl_recorded_gmts as timestamp,",
				"          record_inserted_ts as timestamp,",
				"          investor_company_nm_txt as string,",
				"          prop_last_sale_dt as string,",
				"          prop_last_sale_amt as integer,",
				"          prop_attr_br_cnt as short,",
				"          prop_attr_bth_cnt as double,",
				"          prop_attr_sqft_nr as short,",
				"          prop_yr_blt_nr as short,",
				"          prop_address_line_txt as string,",
				"          prop_city_nm as string,",
				"          prop_state_nm as string,",
				"          prop_cnty_nm as string,",
				"          prop_zip_cd as integer,",
				"          prop_tlt_cnd_nm as string,",
				"          prop_int_cnd_nm as string,",
				"          prop_ext_cnd_nm as string,",
				"          prop_bth_cnd_nm as string,",
				"          prop_kth_cnd_nm as string,",
				"          prop_list_price_amt as integer,",
				"          mailing_address as string,",
				"          mailing_unit as string,",
				"          mailing_city as string,",
				"          mailing_zip as string",
				"     ),",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1) ~> sink1"
			]
		}
	}
}